{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LogService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7214/api/log'; // API base URL\n  }\n  // Method to upload log data to the API\n  uploadLog(logLines) {\n    return this.http.post(`${this.apiUrl}/upload`, logLines);\n  }\n  // Method to get parsed log statistics from the API\n  getLogStatistics() {\n    return this.http.get(`${this.apiUrl}/statistics`);\n  }\n}\nLogService.ɵfac = function LogService_Factory(t) {\n  return new (t || LogService)(i0.ɵɵinject(i1.HttpClient));\n};\nLogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LogService,\n  factory: LogService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,gCAAgC,CAAC,CAAC;EAEX;EAExC;EACAC,SAAS,CAACC,QAAkB;IAC1B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,EAAEF,QAAQ,CAAC;EAC1D;EAEA;EACAG,gBAAgB;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC;EACnD;;AAbWN,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAS,SAAVT,UAAU;EAAAU,YAFT;AAAM","names":["LogService","constructor","http","uploadLog","logLines","post","apiUrl","getLogStatistics","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\source\\repos\\LogParser.UI\\ClientApp\\src\\services\\log.service.ts"],"sourcesContent":["// src/app/services/log.service.ts\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogService {\r\n  private apiUrl = 'https://localhost:7214/api/log'; // API base URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Method to upload log data to the API\r\n  uploadLog(logLines: string[]): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/upload`, logLines);\r\n  }\r\n\r\n  // Method to get parsed log statistics from the API\r\n  getLogStatistics(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/statistics`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}